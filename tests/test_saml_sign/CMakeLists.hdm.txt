# File generated by Callers's cmake_init.sh
cmake_minimum_required(VERSION 2.8)

# generate list of source files with related compilation command
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

# add debug symbols
set(CMAKE_BUILD_TYPE Debug)

#option(USE_CXX_EXCEPTIONS "Enable C++ exception support" ON)

# option to use the system library libxml2-dev
option(SYSTEM_LIB "Use the system library libxml2" OFF)

# option to use a manual installed library libxml2-dev
option(DEV_LIB "Use the manual installed library libxml2" OFF)

# option to use a fake stub library libxml2-dev
option(STUB_LIB "Use the stub library libxml2" ON)

# save temporary files when needed
option(SAVE_TEMPS "Save temporary files" ON)
if(SAVE_TEMPS)
set(CMAKE_C_FLAGS " -save-temps -DFRAMA_C -D__FC_MACHDEP_X86_64")
set(CMAKE_CXX_FLAGS " -save-temps")
endif()

# add subdirectories when needed
add_subdirectory(data)

# add path to header files
if(DEV_LIB)
  include_directories("/data/balp/src/tools/exec/include/libxml2")
endif()
if(SYSTEM_LIB)
  include_directories("/usr/include/libxml2")
endif()
if(STUB_LIB)
  include_directories("./stub")
endif()

# define by default a build target when source files are present
add_executable(xsw_test_saml_sign test_saml_sign.c)

# add path to external libraries
if(DEV_LIB)
  target_link_libraries(xsw_test_saml_sign /data/balp/src/tools/exec/lib/libxml2.so)
endif()
if(SYSTEM_LIB)
  target_link_libraries(xsw_test_saml_sign /usr/lib/x86_64-linux-gnu/libxml2.so)
endif()

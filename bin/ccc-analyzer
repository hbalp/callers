#!/bin/bash
#set -x

source "common.sh"
source "prepare_frama_clang_analysis.sh"

function func_usage ()
{
    provided_cmds=$@
    echo "################################################################################"
    echo "# ccc-analyzer is a scan-build called shell script to launch some clang analysis plugins"
    echo "# version $version"
    echo "################################################################################"
    echo "# Usage:"
    echo "# export CALLERS_ANALYSIS_TYPE=<analysis_type=callers|frama-c|framaCIRGen|all>"
    echo "# ccc-analyzer <file_build_command_and_options>"
    echo "# Provided command was: ${provided_cmds}"
    exit -1
}

#echo "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC"

case "$1" in
    --help | --hel | --he | --h )
	func_usage $provided_cmds 
	;;
    --version | --versio | --versi | --vers | --ver | --ve | --v )
	func_version
	;;
    *)
esac

build_args=$@
#echo "ccc-analyzer arguments are: $@"

#################################################################################
# build the source file to enable link edition and to be sure output directories are well created 
#################################################################################
# get clang path
clang=`which clang`

${clang} ${build_args}

#################################################################################
#       Prepare and launch analysis
#################################################################################
file=`get_file .c ${build_args}`
if [ -z "${file}" ]
then
    echo "No .c source file has been found in arguments, so we bypass the callers analysis"
else

    # get the analysis_type = callers | frama-clang | framaCIRGen | all
    analysis_type=${CALLERS_ANALYSIS_TYPE}

    # prepare launch analysis script
    launch_script=.tmp.gen.analysis.launch.ccc-analyzer.sh
    prepare_analysis_from_scan_build_command ${file} ${build_args} > ${launch_script}
    echo "generated launch script: ${launch_script}"

    # launch the analysis
    echo "launch the ${analysis_type} analysis..."
    analysis_report=$analysis_type
    mkdir -p ${analysis_report}
    source ${launch_script} > ${analysis_report}/${launch_script}.stdout 2> ${analysis_report}/${launch_script}.stderr    
fi
